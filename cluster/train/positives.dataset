1: {
    ```[@]```
    package com.example.demo.controllers;

    import com.example.demo.models.Product;
    import com.example.demo.services.ProductService;
    import org.springframework.http.HttpStatus;
    import org.springframework.http.ResponseEntity;
    import org.springframework.web.bind.annotation.*;
    
    import java.util.List;
    
    @RestController
    @RequestMapping("/products")
    public class ProductController {
    
        private final ProductService productService;
    
        public ProductController(ProductService productService) {
            this.productService = productService;
        }
    
        @GetMapping("/{id}")
        public ResponseEntity<Product> getProduct(@PathVariable Long id) {
            Product product = productService.findProductById(id);
            return product != null ? ResponseEntity.ok(product) : ResponseEntity.status(HttpStatus.NOT_FOUND).build();
        }
    
        @PostMapping
        public ResponseEntity<Product> createProduct(@RequestBody Product product) {
            Product newProduct = productService.saveProduct(product);
            return ResponseEntity.status(HttpStatus.CREATED).body(newProduct);
        }
    
        @PutMapping("/{id}")
        public ResponseEntity<Product> updateProduct(@PathVariable Long id, @RequestBody Product productDetails) {
            Product updatedProduct = productService.updateProduct(id, productDetails);
            return ResponseEntity.ok(updatedProduct);
        }
    
        @DeleteMapping("/{id}")
        public ResponseEntity<Void> deleteProduct(@PathVariable Long id) {
            productService.deleteProduct(id);
            return ResponseEntity.noContent().build();
        }
    
        @GetMapping
        public ResponseEntity<List<Product>> getAllProducts() {
            List<Product> products = productService.getAllProducts();
            return ResponseEntity.ok(products);
        }
    }
    ```[@]```
},
2: {
    ```[@]```
    package com.example.demo.services;
    
    import com.example.demo.models.Product;
    import com.example.demo.repositories.ProductRepository;
    import org.springframework.stereotype.Service;
    
    import java.util.List;
    
    @Service
    public class ProductService {
    
        private final ProductRepository productRepository;
    
        public ProductService(ProductRepository productRepository) {
            this.productRepository = productRepository;
        }
    
        public Product findProductById(Long id) {
            return productRepository.findById(id).orElse(null);
        }
    
        public List<Product> getAllProducts() {
            return productRepository.findAll();
        }
    
        public Product saveProduct(Product product) {
            return productRepository.save(product);
        }
    
        public Product updateProduct(Long id, Product productDetails) {
            Product existingProduct = findProductById(id);
            if (existingProduct != null) {
                existingProduct.setName(productDetails.getName());
                existingProduct.setPrice(productDetails.getPrice());
                return productRepository.save(existingProduct);
            }
            return null;
        }
    
        public void deleteProduct(Long id) {
            productRepository.deleteById(id);
        }
    }
    ```[@]```
},
3: {
    ```[@]```
    package com.example.demo.repositories;
    
    import com.example.demo.models.Product;
    import org.springframework.data.jpa.repository.JpaRepository;
    import org.springframework.stereotype.Repository;
    
    import java.util.Optional;
    
    @Repository
    public interface ProductRepository extends JpaRepository<Product, Long> {
        Optional<Product> findById(Long id);
    }
    ```[@]```
}
