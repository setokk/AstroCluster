1: {
    ```[@]```
        package com.example.demo.controllers;

        import com.example.demo.models.User;
        import com.example.demo.services.UserService;
        import org.springframework.http.HttpStatus;
        import org.springframework.http.ResponseEntity;
        import org.springframework.web.bind.annotation.*;

        import java.util.List;

        @RestController
        @RequestMapping("/users")
        public class UserController {

            private final UserService userService;

            public UserController(UserService userService) {
                this.userService = userService;
            }

            @GetMapping("/{id}")
            public ResponseEntity<User> getUser(@PathVariable Long id) {
                User user = userService.findUserById(id);
                return user != null ? ResponseEntity.ok(user) : ResponseEntity.status(HttpStatus.NOT_FOUND).build();
            }

            @PostMapping
            public ResponseEntity<User> createUser(@RequestBody User user) {
                User newUser = userService.saveUser(user);
                return ResponseEntity.status(HttpStatus.CREATED).body(newUser);
            }

            @PutMapping("/{id}")
            public ResponseEntity<User> updateUser(@PathVariable Long id, @RequestBody User userDetails) {
                User updatedUser = userService.updateUser(id, userDetails);
                return ResponseEntity.ok(updatedUser);
            }

            @DeleteMapping("/{id}")
            public ResponseEntity<Void> deleteUser(@PathVariable Long id) {
                userService.deleteUser(id);
                return ResponseEntity.noContent().build();
            }

            @GetMapping
            public ResponseEntity<List<User>> getAllUsers() {
                List<User> users = userService.getAllUsers();
                return ResponseEntity.ok(users);
            }
        }
    ```[@]```
}

2: {
    ```[@]```
        package com.example.demo.services;

        import com.example.demo.models.User;
        import com.example.demo.repositories.UserRepository;
        import org.springframework.stereotype.Service;

        import java.util.List;
        import java.util.Optional;

        @Service
        public class UserService {

            private final UserRepository userRepository;

            public UserService(UserRepository userRepository) {
                this.userRepository = userRepository;
            }

            public User findUserById(Long id) {
                return userRepository.findById(id).orElse(null);
            }

            public List<User> getAllUsers() {
                return userRepository.findAll();
            }

            public User saveUser(User user) {
                return userRepository.save(user);
            }

            public User updateUser(Long id, User userDetails) {
                User existingUser = findUserById(id);
                if (existingUser != null) {
                    existingUser.setName(userDetails.getName());
                    return userRepository.save(existingUser);
                }
                return null;
            }

            public void deleteUser(Long id) {
                userRepository.deleteById(id);
            }
        }
    ```[@]```
}

3: {
    ```[@]```
        package com.example.demo.repositories;

        import com.example.demo.models.User;
        import org.springframework.data.jpa.repository.JpaRepository;
        import org.springframework.stereotype.Repository;

        import java.util.Optional;

        @Repository
        public interface UserRepository extends JpaRepository<User, Long> {
            Optional<User> findById(Long id);
        }
    ```[@]```
}